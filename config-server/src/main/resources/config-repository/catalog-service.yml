resilience4j:
  bulkhead:
    instances:
      default:
        maxConcurrentCalls: 100
        maxWaitDuration: 10ms
      product-api:
        maxConcurrentCalls: 100
  ratelimiter:
    instances:
      default:
        limitForPeriod: 1000
        limitRefreshPeriod: 10s
        timeoutDuration: 0
        registerHealthIndicator: true
        eventConsumerBufferSize: 100
  retry:
    instances:
      default:
        maxAttempts: 3
        waitDuration: 10s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        ignoreExceptions:
          - com.example.catalogservice.exception.ProductNotFoundException
  timelimiter:
    instances:
      default:
        timeoutDuration: 2s
        cancelRunningFuture: true

spring.webflux.problemdetails.enabled: true

management.health.circuitbreakers.enabled: true
management.health.ratelimiters.enabled: true

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 100
      permittedNumberOfCallsInHalfOpenState: 10
      waitDurationInOpenState: 10000
      failureRateThreshold: 60
      eventConsumerBufferSize: 10
    shared:
      slidingWindowSize: 50
      permittedNumberOfCallsInHalfOpenState: 2
  instances:
    default:
      baseConfig: default
      waitDurationInOpenState: 5000
    getInventoryByProductCodes:
      baseConfig: shared

resilience4j.ratelimiter:
  configs:
    instances:
      registerHealthIndicator: true
